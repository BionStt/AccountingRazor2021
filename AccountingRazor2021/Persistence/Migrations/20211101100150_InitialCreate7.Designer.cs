// <auto-generated />
using System;
using AccountingRazor2021.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountingRazor2021.Persistence.Migrations
{
    [DbContext(typeof(AccountingDbContext))]
    [Migration("20211101100150_InitialCreate7")]
    partial class InitialCreate7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AccountingRazor2021.Domain.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UsernameChangeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataAccount", b =>
                {
                    b.Property<Guid>("DataAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Account");

                    b.Property<string>("Aktif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Depth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Depth");

                    b.Property<string>("Kelompok")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Kelompok");

                    b.Property<string>("KodeAccount")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("KodeAccount");

                    b.Property<int?>("Lft")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Lft");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NormalPos")
                        .HasColumnType("int")
                        .HasColumnName("NormalPos");

                    b.Property<string>("Parent")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Parent");

                    b.Property<int?>("Rgt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("Rgt");

                    b.HasKey("DataAccountId");

                    b.ToTable("DataAccount");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataBuktiTransaksi", b =>
                {
                    b.Property<Guid>("DataBuktiTransaksiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Keterangan")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Keterangan");

                    b.Property<string>("NoBukti")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NoBukti");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime")
                        .HasColumnName("TanggalInput");

                    b.Property<int>("TipeJournalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("money")
                        .HasColumnName("Total");

                    b.Property<string>("ValidateBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ValidateBy");

                    b.Property<DateTime>("ValidatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("ValidatedDate");

                    b.HasKey("DataBuktiTransaksiId");

                    b.ToTable("DataBuktiTransaksi");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataJournalDetails", b =>
                {
                    b.Property<Guid>("DataJournalDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataJournalHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("money")
                        .HasColumnName("Debit");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("Keterangan");

                    b.Property<decimal?>("Kredit")
                        .HasColumnType("money")
                        .HasColumnName("Kredit");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SaldoAwal")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime2");

                    b.HasKey("DataJournalDetailsId");

                    b.ToTable("DataJournal");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataJournalHeader", b =>
                {
                    b.Property<Guid>("DataJournalHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aktif")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("Aktif");

                    b.Property<string>("Keterangan")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Keterangan");

                    b.Property<string>("NoBuktiJournal")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("NoBuktiJournal");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TanggalInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipeJournalId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalRupiah")
                        .HasColumnType("money");

                    b.Property<string>("UserInput")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("UserInput");

                    b.Property<DateTime?>("Validasi")
                        .HasColumnType("datetime")
                        .HasColumnName("Validasi");

                    b.Property<string>("ValidasiOleh")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ValidasiOleh");

                    b.HasKey("DataJournalHeaderId");

                    b.ToTable("DataJournalHeader");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataPeriode", b =>
                {
                    b.Property<Guid>("DataPeriodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aktif")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("IsAktif");

                    b.Property<DateTime>("Berakhir")
                        .HasColumnType("datetime")
                        .HasColumnName("Berakhir");

                    b.Property<DateTime>("Mulai")
                        .HasColumnType("datetime")
                        .HasColumnName("Mulai");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserInput")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserInput");

                    b.HasKey("DataPeriodeId");

                    b.ToTable("DataPeriode");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataSaldoAwal", b =>
                {
                    b.Property<Guid>("DataSaldoAwalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Debet")
                        .HasColumnType("money")
                        .HasColumnName("Debet");

                    b.Property<decimal>("Kredit")
                        .HasColumnType("money")
                        .HasColumnName("Kredit");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Saldo")
                        .HasColumnType("money")
                        .HasColumnName("Saldo");

                    b.Property<DateTime>("TanggalInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 11, 1, 17, 1, 50, 24, DateTimeKind.Local).AddTicks(8648))
                        .HasColumnName("TanggalInput");

                    b.HasKey("DataSaldoAwalId");

                    b.ToTable("DataSaldoAwal");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.DataSaldoHarian", b =>
                {
                    b.Property<Guid>("DataSaldoHarianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Debet")
                        .HasColumnType("money")
                        .HasColumnName("Debet");

                    b.Property<decimal>("Kredit")
                        .HasColumnType("money")
                        .HasColumnName("Kredit");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Saldo")
                        .HasColumnType("money")
                        .HasColumnName("Saldo");

                    b.Property<DateTime>("TanggalInput")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2021, 11, 1, 17, 1, 50, 29, DateTimeKind.Local).AddTicks(2420))
                        .HasColumnName("TanggalInput");

                    b.HasKey("DataSaldoHarianId");

                    b.ToTable("DataSaldoHarian", "Accounting");
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.TipeJournal", b =>
                {
                    b.Property<Guid>("TipeJournalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KodeJournal")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NamaJournal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NamaJournal");

                    b.Property<int>("NoUrutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("TipeJournalId");

                    b.ToTable("TipeJournal");

                    b.HasData(
                        new
                        {
                            TipeJournalId = new Guid("8fb6b83d-af98-4070-821b-b77592e228da"),
                            KodeJournal = "JU",
                            NamaJournal = "JURNAL UMUM",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("0dcbf188-9447-46a1-8f69-03d87410982e"),
                            KodeJournal = "JPMB",
                            NamaJournal = "JURNAL PEMBELIAN",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("ba45723f-4821-4ca9-adaa-ae15da430285"),
                            KodeJournal = "JPJ",
                            NamaJournal = "JURNAL PENJUALAN",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("1fc7e614-f1ef-40fd-92b1-d34d839a4dce"),
                            KodeJournal = "JPNK",
                            NamaJournal = "JURNAL PENERIMAAN KAS",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("593931f3-fa59-403d-80c3-3e9cc5f256b1"),
                            KodeJournal = "JPGNK",
                            NamaJournal = "JURNAL PENGELUARAN KAS",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("99818232-423d-4c82-a5f8-a190fe6696fc"),
                            KodeJournal = "JPEY",
                            NamaJournal = "JURNAL PENYESUAIAN",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("02ea092d-b28c-470d-a227-c7b6ee641317"),
                            KodeJournal = "JPMBK",
                            NamaJournal = "JURNAL PEMBUKA",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("4e16154f-9d59-4f21-85d7-f4155db02867"),
                            KodeJournal = "JPNTP",
                            NamaJournal = "JURNAL PENUTUP",
                            NoUrutId = 0
                        },
                        new
                        {
                            TipeJournalId = new Guid("18f24582-0973-4597-9472-c4dbfe201f56"),
                            KodeJournal = "JPMBLK",
                            NamaJournal = "JURNAL PEMBALIK",
                            NoUrutId = 0
                        });
                });

            modelBuilder.Entity("AccountingRazor2021.Domain.UserProfile", b =>
                {
                    b.Property<int>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserProfileId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AccountingRazor2021.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AccountingRazor2021.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountingRazor2021.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AccountingRazor2021.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
